parameters:

    # @todo Those next two could be remove or determined
    # dynamically using the bundle routing prefix to avoid
    # problems
    jaccob_media.directory.relative: media/th
    jaccob_media.directory.public: "%kernel.root_dir%/../web/%jaccob_media.directory.relative%"
    jaccob_media.directory.upload: /data/private/photos
    # jaccob_media.image.default:

    # Allowed media sizes
    jaccob_media.size.list: [285, 855, 1440, full]
    # Default full screen width (media view with no sidebar)
    jaccob_media.size.fullscreen: 1440
    # Default media view width (media view with sidebar)
    jaccob_media.size.default: 855
    # Default thumbnail size used for album list (home)
    jaccob_media.size.thumbnail: 250
    # Default thumbnail size used for media grid view
    jaccob_media.size.thumbnail.grid: 570

    # For this setting, only format, video and audio tags will be interpreted,
    # all the other key/value pairs will be given as-is to ffmpeg as options
    # for the encoding (audio is optional) ; defaults should be safe and
    # all-around usage
    # Generated derivatives will have the right codec/mimetype saved into
    # database and video HTML tag will be correctly and dynamically built
    # using those values
    jaccob_media.video.derivatives:
      - {format: mp4, video: libx264, preset: ultrafast, qp: 0, threads: 4}
      - {format: webm, audio: libopus, video: libvpx-vp9, tile-columns: 6, frame-parallel: 1, speed: 1, threads: 4}

services:

    jaccob_media.security.access.share_voter:
        class: Jaccob\MediaBundle\Security\Authorization\Voter\AlbumVoter
        public: false
        calls:
            - [setContainer, ["@service_container"]]
            # FIXME This should be the "media" session
            - [setMediaSession, ["@pomm.default_session"]]
            - [setSession, ["@session"]]
        tags:
            - { name: security.voter }

    jaccob_media.menu_provider:
        class: Jaccob\MediaBundle\Menu\MediaMenuProvider
        arguments: ["@knp_menu.factory"]
        calls:
            - [setContainer, ["@service_container"]]
        tags: [{ name: knp_menu.provider }]

    jaccob_media.menu_listener:
        class: Jaccob\MediaBundle\EventListener\ConfigureMenuListener
        calls:
            - [setContainer, ["@service_container"]]
        tags:
          - { name: kernel.event_listener, event: jaccob.menu_configure, method: onMenuConfigure }

    jaccob_media.media_listener:
        class: Jaccob\MediaBundle\EventListener\MediaListener
        calls:
          - [setContainer, ["@service_container"]]
        tags:
          - { name: kernel.event_listener, event: jaccob_media.insert, method: onMediaSave }
          - { name: kernel.event_listener, event: jaccob_media.update, method: onMediaSave }

    # @todo Register all and make it configurable via parameters.yml file
    jaccob_media.path_builder:
        class: Jaccob\MediaBundle\Util\SimplePathBuilder

    jaccob_media.importer:
        class: Jaccob\MediaBundle\Import\FilesystemImporter
        calls:
            - [setContainer, ["@service_container"]]
            - [setMediaHelper, ["@jaccob_media.media_helper"]]
            - [setPathBuilder, ["@jaccob_media.path_builder"]]

    jaccob_media.media_helper:
        class: Jaccob\MediaBundle\Util\MediaHelper
        calls:
            - [setContainer, ["@service_container"]]
            - [setTypeFinder, ["@jaccob_media.type_finder"]]

    jaccob_media.type_finder:
        class: Jaccob\MediaBundle\Type\TypeFinderService

    jaccob_media.type.image:
        class: Jaccob\MediaBundle\Type\Impl\ImageType
        arguments:
            - image/gif
            - image/jpeg
            - image/png
            - image/svg+xml
            - image/vnd.microsoft.icon
        tags: [{ name: jaccob_media.type }]
        calls:
            - [setMediaHelper, ["@jaccob_media.media_helper"]]

    jaccob_media.type.video:
        class: Jaccob\MediaBundle\Type\Impl\VideoType
        arguments:
            - video/3gpp
            - video/mp2t
            - video/mp4
            - video/mpeg
            - video/quicktime
            - video/webm
            - video/x-flv
            - video/x-msvideo
            - video/x-ms-wmv
        tags:
          - { name: jaccob_media.type }
          - { name: kernel.event_listener, event: jaccob_media.insert, method: onMediaSave }
          - { name: kernel.event_listener, event: jaccob_media.update, method: onMediaSave }
        calls:
            - [setContainer, ["@service_container"]]
            - [setMediaHelper, ["@jaccob_media.media_helper"]]

    jaccob_media.job_manager:
        class: Jaccob\MediaBundle\Model\JobQueueManager
        calls:
            - [setMediaSession, ["@pomm.default_session"]]
            - [setSession, ["@pomm.default_session"]]
            - [setJobFactory, ["@jaccob_media.job_factory"]]

    jaccob_media.job_factory:
        class: Jaccob\MediaBundle\Type\Job\JobFactory

    #
    # External security (HTTPd authorization for media)
    # @see \Jaccob\MediaBundle\Security\External\SessionAclManagerInterface
    #

    # You can swtich between the next implementations
    # First one will use Redis and require you to have a working server
    jaccob_media.security.external:
        class: Jaccob\MediaBundle\Security\External\PhpRedisSessionAclManager
        calls:
            - [setRedisClient, ["@jaccob.redis.client"]]

    # jaccob_media.security.external:
    #     class: Jaccob\MediaBundle\Security\External\PommSessionAclManager
    #     calls:
    #         - [setSession, ["@pomm.default_session"]]

    jaccob_media.security.external.listener:
        class: Jaccob\MediaBundle\EventListener\ExternalSessionAclListener
        calls:
          - [setAclManager, ["@jaccob_media.security.external"]]
        tags:
          - { name: kernel.event_listener, event: jaccob_media.album.auth, method: onAuthorization }

    #
    # Twig extensions
    #

    jaccob_media.twig.media_type:
        class: Jaccob\MediaBundle\Twig\MediaTypeExtension
        tags: [{ name: twig.extension }]
        calls:
            - [setContainer, ["@service_container"]]
            - [setMediaHelper, ["@jaccob_media.media_helper"]]

    jaccob_media.twig.pomm_pager:
        class: Jaccob\MediaBundle\Twig\PommPagerExtension
        tags: [{ name: twig.extension }]
        calls:
            - [setContainer, ["@service_container"]]

    #
    # Jobs
    #

    jaccob_media.job.video_transcode:
        class: Jaccob\MediaBundle\Type\Impl\Job\VideoTranscode
        calls:
            - [setContainer, ["@service_container"]]
            - [setMediaHelper, ["@jaccob_media.media_helper"]]
        tags: [{ name: jaccob_media.job, alias: video_transcode }]

    jaccob_media.job.media_thumbnail:
        class: Jaccob\MediaBundle\Type\Impl\Job\MediaThumbnail
        calls:
            - [setContainer, ["@service_container"]]
            - [setMediaHelper, ["@jaccob_media.media_helper"]]
        tags: [{ name: jaccob_media.job, alias: media_thumbnail }]

    #
    # Commands
    #

    jaccob_media.commands.job_queue_list:
        class: Jaccob\MediaBundle\Command\ListJobCommand
        calls:
            - [setContainer, ["@service_container"]]
        tags: [{ name: console.command }]

    jaccob_media.commands.job_queue_run_next:
        class: Jaccob\MediaBundle\Command\RunNextJobCommand
        calls:
            - [setContainer, ["@service_container"]]
        tags: [{ name: console.command }]
